// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.4.20;

contract SupplyChain{
    address public owner;
    uint public creationTime;
    byte/s32 a;
mapping(address => User) private usersdetail;
address[] private userindex;
uint count =userindex.length;

    constructor() public {
        owner=msg.sender;
        creationTime= block.timestamp;

    }
    struct user_roles{
       uint user_role;
    }


        struct User{
            uint role;
            address password;
            string us_name;
            address createdBy;
            uint creationTime;
            string location;
            uint index;
            

        }
        function setUser(address _useraddress, string memory us_name, string memory password, string memory email,string memory location, uint role){
require(isUser(_userAddress)==false);
 usersdetail[_userAddress].Createdby = msg.sender;
            usersdetail[_userAddress].creationTime= block.timestamp;
            usersdetail[_userAddress].us_name=us_name;
            usersdetail[_userAddress].password=password;
            usersdetail[_userAddress].email=email;
            usersdetail[_userAddress].location=location;
            usersdetail[_userAddress].role=role;
            us_role[_userAddress]= role;
            userindex.push(_userAddress);
            usersdetail[_userAddress].index=userindex.length-1;
           // a=sha256(abi.encodePacked(_userAddress,us_name,location,password,email,role));
            

        }

//     uint upc;
//     uint sku;
//     enum State{
//         ProduceBySupplier,        
//             ForSaleBySupplier,         
//             PurchasedByManufacturer,  
//             ShippedBySupplier,        
//             ReceivedByManufacturer,   
//             ProcessedByManufacturer,  
//             PackagedByManufacturer,   
//             ForSaleByManufacturer,    
//             PurchasedByBrand,         
//             ShippedByManufacturer,    
//             ReceivedByRetailer      
//     }
//     struct product {
//             uint    sku;                    // Stock Keeping Unit (SKU)
//             string    upc;                    // Universal Product Code (UPC), generated by the Farmer, goes on the package, can be verified by the Consumer
//             uint creationTime;
//             address ownerID;                // Metamask-Ethereum address of the current owner as the product moves through 8 stages
//             address supplierID;         // Metamask-Ethereum address of the Farmer // ADDED PAYABLE
//             string  supplierName;         // Farmer Name
//             uint    productPrice;           // Product Price
//             uint quantity;
//             State   prodState;// Product State as represented in the enum above
//             // string manufacturerid;
//             address manufacturerID; 
//             string manufacturerName;
//             address retailerID;
//             string retailerName;         // Metamask-Ethereum address of the Distributor
//                       // Metamask-Ethereum address of the Consumer // ADDED payable
//         }

//         //  struct Txblocks {
//         //     uint STM; // blocksuppliertomanufacturer
//         //     uint MTR; // blockManufacturer to retailer
//         //     uint PM;//blockpurchsetoprocess
//         //     uint PPA;//blockprocesstopacakge
//         //   }
// }