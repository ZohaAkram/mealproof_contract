// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.4.20;

contract SupplyChain{
    enum State{
        ProduceBySupplier,        
            ForSaleBySupplier,         
            PurchasedByManufacturer,  
            ShippedBySupplier,        
            ReceivedByManufacturer,   
            ProcessedByManufacturer,  
            PackagedByManufacturer,   
            ForSaleByManufacturer,    
            PurchasedByBrand,         
            ShippedByManufacturer,    
            ReceivedByRetailer      
    }
    struct product {
            uint    sku;                    // Stock Keeping Unit (SKU)
            string    upc;                    // Universal Product Code (UPC), generated by the Farmer, goes on the package, can be verified by the Consumer
            uint creationTime;
            address ownerID;                // Metamask-Ethereum address of the current owner as the product moves through 8 stages
            address supplierID;         // Metamask-Ethereum address of the Farmer // ADDED PAYABLE
            string  supplierName;         // Farmer Name
            uint    productPrice;           // Product Price
            uint quantity;
            State   prodState;// Product State as represented in the enum above
            // string manufacturerid;
            address manufacturerID; 
            string manufacturerName;
            address retailerID;
            string retailerName;         // Metamask-Ethereum address of the Distributor
                      // Metamask-Ethereum address of the Consumer // ADDED payable
        }
         struct Txblocks {
            uint STM; // blocksuppliertomanufacturer
            uint MTR; // blockManufacturer to retailer
            uint PM;//blockpurchsetoprocess
            uint PPA;//blockprocesstopacakge
          }
}